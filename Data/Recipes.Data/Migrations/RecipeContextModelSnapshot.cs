// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Recipes.Data;

namespace Recipes.Data.Migrations
{
    [DbContext(typeof(RecipeContext))]
    partial class RecipeContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.1");

            modelBuilder.Entity("Recipes.Data.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreatorId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id");

                    b.HasIndex("CreatorId");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedOn = new DateTime(2020, 12, 23, 16, 41, 45, 401, DateTimeKind.Local).AddTicks(7699),
                            CreatorId = 4,
                            Name = "Salads"
                        },
                        new
                        {
                            Id = 2,
                            CreatedOn = new DateTime(2020, 12, 23, 16, 41, 45, 401, DateTimeKind.Local).AddTicks(8071),
                            CreatorId = 4,
                            Name = "Soups"
                        },
                        new
                        {
                            Id = 3,
                            CreatedOn = new DateTime(2020, 12, 23, 16, 41, 45, 401, DateTimeKind.Local).AddTicks(8082),
                            CreatorId = 4,
                            Name = "Main dishes"
                        },
                        new
                        {
                            Id = 4,
                            CreatedOn = new DateTime(2020, 12, 23, 16, 41, 45, 401, DateTimeKind.Local).AddTicks(8084),
                            CreatorId = 4,
                            Name = "Vegetarian"
                        },
                        new
                        {
                            Id = 5,
                            CreatedOn = new DateTime(2020, 12, 23, 16, 41, 45, 401, DateTimeKind.Local).AddTicks(8087),
                            CreatorId = 4,
                            Name = "Desserts"
                        },
                        new
                        {
                            Id = 6,
                            CreatedOn = new DateTime(2020, 12, 23, 16, 41, 45, 401, DateTimeKind.Local).AddTicks(8089),
                            CreatorId = 4,
                            Name = "Drinks"
                        });
                });

            modelBuilder.Entity("Recipes.Data.Models.FavouriteRecipe", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("RecipeId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.HasKey("UserId", "RecipeId");

                    b.HasIndex("RecipeId");

                    b.ToTable("FavouriteRecipes");
                });

            modelBuilder.Entity("Recipes.Data.Models.Ingredient", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<decimal>("Quantity")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("RecipeId")
                        .HasColumnType("int");

                    b.Property<string>("Unit")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("RecipeId");

                    b.ToTable("Ingredients");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedOn = new DateTime(2020, 12, 23, 16, 41, 45, 402, DateTimeKind.Local).AddTicks(4219),
                            Name = "Potatoes",
                            Quantity = 1.5m,
                            RecipeId = 1,
                            Unit = "kg"
                        },
                        new
                        {
                            Id = 2,
                            CreatedOn = new DateTime(2020, 12, 23, 16, 41, 45, 402, DateTimeKind.Local).AddTicks(4231),
                            Name = "Meat",
                            Quantity = 0.7m,
                            RecipeId = 1,
                            Unit = "kg"
                        },
                        new
                        {
                            Id = 3,
                            CreatedOn = new DateTime(2020, 12, 23, 16, 41, 45, 402, DateTimeKind.Local).AddTicks(4235),
                            Name = "Milk",
                            Quantity = 1m,
                            RecipeId = 2,
                            Unit = "ml"
                        },
                        new
                        {
                            Id = 4,
                            CreatedOn = new DateTime(2020, 12, 23, 16, 41, 45, 402, DateTimeKind.Local).AddTicks(4237),
                            Name = "Biscuits",
                            Quantity = 0.25m,
                            RecipeId = 2,
                            Unit = "kg"
                        },
                        new
                        {
                            Id = 5,
                            CreatedOn = new DateTime(2020, 12, 23, 16, 41, 45, 402, DateTimeKind.Local).AddTicks(4240),
                            Name = "Chocolate",
                            Quantity = 0.2m,
                            RecipeId = 2,
                            Unit = "kg"
                        });
                });

            modelBuilder.Entity("Recipes.Data.Models.Recipe", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreatorId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasMaxLength(10000)
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("TitleImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("CreatorId");

                    b.ToTable("Recipes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryId = 3,
                            CreatedOn = new DateTime(2020, 12, 23, 16, 41, 45, 402, DateTimeKind.Local).AddTicks(2136),
                            CreatorId = 1,
                            Description = "Traditional Bulgarian dish",
                            Name = "Musaka",
                            TitleImageUrl = "shorturl.at/zAGI3"
                        },
                        new
                        {
                            Id = 2,
                            CategoryId = 5,
                            CreatedOn = new DateTime(2020, 12, 23, 16, 41, 45, 402, DateTimeKind.Local).AddTicks(2150),
                            CreatorId = 3,
                            Description = "Classic chocolate cake",
                            Name = "Chocolate cake",
                            TitleImageUrl = "shorturl.at/fzBES"
                        });
                });

            modelBuilder.Entity("Recipes.Data.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Role")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedOn = new DateTime(2020, 12, 23, 16, 41, 45, 398, DateTimeKind.Local).AddTicks(7694),
                            Description = "I'm 20 years old",
                            Email = "someMail@abv.bg",
                            ImageUrl = "shorturl.at/ltyFY",
                            Password = "123FDGEF",
                            Role = 1
                        },
                        new
                        {
                            Id = 2,
                            CreatedOn = new DateTime(2020, 12, 23, 16, 41, 45, 400, DateTimeKind.Local).AddTicks(7493),
                            Description = "Hello there",
                            Email = "other@abv.bg",
                            ImageUrl = "shorturl.at/ltyFY",
                            Password = "12FddFDDGEF2",
                            Role = 1
                        },
                        new
                        {
                            Id = 3,
                            CreatedOn = new DateTime(2020, 12, 23, 16, 41, 45, 400, DateTimeKind.Local).AddTicks(7515),
                            Description = "I'm new here",
                            Email = "email@abv.bg",
                            ImageUrl = "shorturl.at/ltyFY",
                            Password = "werDGEF2",
                            Role = 1
                        },
                        new
                        {
                            Id = 4,
                            CreatedOn = new DateTime(2020, 12, 23, 16, 41, 45, 400, DateTimeKind.Local).AddTicks(7518),
                            Description = "Admin",
                            Email = "email@abv.bg",
                            ImageUrl = "shorturl.at/ltyFY",
                            Password = "ggdsg@gmail.com",
                            Role = 2
                        });
                });

            modelBuilder.Entity("Recipes.Data.Models.Category", b =>
                {
                    b.HasOne("Recipes.Data.Models.User", "Creator")
                        .WithMany()
                        .HasForeignKey("CreatorId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Creator");
                });

            modelBuilder.Entity("Recipes.Data.Models.FavouriteRecipe", b =>
                {
                    b.HasOne("Recipes.Data.Models.Recipe", "Recipe")
                        .WithMany("FavouriteRecipes")
                        .HasForeignKey("RecipeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Recipes.Data.Models.User", "User")
                        .WithMany("FavouriteRecipes")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Recipe");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Recipes.Data.Models.Ingredient", b =>
                {
                    b.HasOne("Recipes.Data.Models.Recipe", "Recipe")
                        .WithMany("Ingredients")
                        .HasForeignKey("RecipeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Recipe");
                });

            modelBuilder.Entity("Recipes.Data.Models.Recipe", b =>
                {
                    b.HasOne("Recipes.Data.Models.Category", "Category")
                        .WithMany("Recipes")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Recipes.Data.Models.User", "Creator")
                        .WithMany("Recipes")
                        .HasForeignKey("CreatorId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("Creator");
                });

            modelBuilder.Entity("Recipes.Data.Models.Category", b =>
                {
                    b.Navigation("Recipes");
                });

            modelBuilder.Entity("Recipes.Data.Models.Recipe", b =>
                {
                    b.Navigation("FavouriteRecipes");

                    b.Navigation("Ingredients");
                });

            modelBuilder.Entity("Recipes.Data.Models.User", b =>
                {
                    b.Navigation("FavouriteRecipes");

                    b.Navigation("Recipes");
                });
#pragma warning restore 612, 618
        }
    }
}
